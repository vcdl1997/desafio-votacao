server:
  servlet:
    context-path: /desafio-votacao
  port: 8080

spring:
  application:
    name: desafio-votacao
  datasource:
    url: jdbc:postgresql://${HOST:localhost}:5432/db_server #jdbc:postgresql://localhost:5432/db_server (para rodar através da IDE)
    username: sistema_votacao
    password: uj9Gi7Pw8DiMoxn
    driver-class-name: org.postgresql.Driver
    hikari:
      minimum-idle: 5 # número mínimo de conexões mantidas pelo pool enquanto a demanda é baixa
      maximum-pool-size: 20 # número máximo de conexões que podem ser mantidas pelo pool (ociosas e em uso)
      auto-commit: false # deixa apenas os locais anotados com @Transactional trabalhando dentro de um contexto transacional
      connection-timeout: 250 # tempo máximo que pode aguardar para obter uma conexão do pool
      max-lifetime: 600000 # tempo máximo que uma conexão pode ficar viva
  jpa:
    hibernate:
      ddl-auto: create-drop
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl # converte os nomes para snake_case igual ao padrão do banco de dados
    defer-datasource-initialization: true # garante que seja feita a inicialização das tabelas baseadas nas entidades antes de executar scripts de inicialização
    open-in-view: false 
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        generate_statistics: true
        connection:
          provider_disables_autocommit: true
  sql:
    init:
      mode: always
      data-locations: classpath:db/init.sql
  data:
    web:
      pageable:
        default-page-size: 10
        max-page-size: 100

springdoc:
  api-docs:
    path: /api-docs
    enabled: true
  swagger-ui:
    enabled: true

logging:
  level:
    org:
      hibernate:
        SQL: DEBUG
        orm:
          jdbc:
            bind: TRACE
      springdoc: DEBUG
